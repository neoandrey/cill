name: Build Docker image

on:
  push:
    branches: [ "main" ]
    
jobs:

  build:
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    environment: prod
    steps:
    - name: Check out the repo
      uses: actions/checkout@v4

    - name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        create_credentials_file: true
        workload_identity_provider: ${{ secrets.GCP_WIP }}
        service_account: ${{ secrets.SERVICE_ACCOUNT }}

    - name: decrypt settings
      env:
        settingsKey: ${{ secrets.SETTINGS_DECRYPT_KEY }}
      run: |
        for filename in ./settings/*; do
          gpg --quiet --batch --yes --decrypt --passphrase="$settingsKey"  --output ${filename/.gpg/} "$filename"
          rm -f $filename     
        done
    - name: Get the release version
      id: strip-branch-name
      run: |
             echo "RELEASE_VERSION=1.0.0" >> $GITHUB_ENV
      shell: bash

    - name: containerize
      env:
        PORT: ${{ secrets.PORT }}
        APP_NAME: ${{ vars.APP_NAME }}
        FLASK_ENV: ${{ vars.FLASK_ENV }}
        MONGODB_URL: ${{ secrets.MONGODB_URL }}
        MONGODB_DB: ${{ secrets.MONGODB_DB }}
        SESSION_TYPE: ${{ vars.SESSION_TYPE }}
        REDIS_URL: ${{ secrets.REDIS_URL }}
        REDIS_QUEUE_NAME: ${{ secrets.REDIS_QUEUE_NAME }}

      run: |
        docker build --build-arg PORT="$PORT"  --build-arg  FLASK_APP="${APP_NAME}" --build-arg  FLASK_ENV="$FLASK_ENV" --build-arg  MONGODB_URL="$MONGODB_URL" --build-arg MONGODB_DB="$MONGODB_DB" --build-arg MONGODB_AUTH_MECHANISM=DEFAULT --build-arg SESSION_TYPE="$SESSION_TYPE"  --build-arg REDIS_URL="$REDIS_URL" --build-arg  REDIS_QUEUE_NAME="$REDIS_QUEUE_NAME"  -t  "$APP_NAME" .
   
    - name: Tag the image with release version
      env:
        APP_NAME: ${{ vars.APP_NAME }}
        REPOSITORY: ${{ vars.REPOSITORY }}
      run: docker tag $APP_NAME "$APP_NAME:$RELEASE_VERSION" 

    - name: Tag the image with REPOSITORY
      env:
        APP_NAME: ${{ vars.APP_NAME }}
        REPOSITORY: ${{ vars.REPOSITORY }}
      run: docker tag $APP_NAME:$RELEASE_VERSION $REPOSITORY/$APP_NAME:$RELEASE_VERSION
    - name: Create a latest image
      env:
        APP_NAME: ${{ vars.APP_NAME }}
        REPOSITORY: ${{ vars.REPOSITORY }}
      run: docker tag $APP_NAME:$RELEASE_VERSION $REPOSITORY/$APP_NAME:latest

    - name: Push the Docker image with version number
      env:
        APP_NAME: ${{ vars.APP_NAME }}
        REPOSITORY: ${{ vars.REPOSITORY }}
        REGION: ${{ vars.REGION}}
      run: 
        gcloud auth configure-docker $REGION-docker.pkg.dev --quiet
        docker push $REPOSITORY/$APP_NAME:$RELEASE_VERSION
    
    - name: Deploy to Cloud Run
      env:
        GCP_WIP: ${{ secrets.GCP_WIP }}
        MONGODB_DB: ${{ secrets.MONGODB_DB }}
        MONGODB_URL: ${{ secrets.MONGODB_URL }}
        REDIS_QUEUE_NAME: ${{ secrets.REDIS_QUEUE_NAME }}
        REDIS_URL: ${{ secrets.REDIS_URL }}
        SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
        SETTINGS_DECRYPT_KEY: ${{ secrets.SETTINGS_DECRYPT_KEY }}
        APP_NAME: ${{ vars.APP_NAME }}
        BUCKET_MOUNT_PATH: ${{ vars.BUCKET_MOUNT_PATH }}
        BUCKET_NAME: ${{ vars.BUCKET_NAME }}
        FLASK_APP: ${{ vars.FLASK_APP }}
        FLASK_ENV: ${{ vars.FLASK_ENV }}
        INSTANCES: ${{ vars.INSTANCES }}
        PORT: ${{ vars.PORT }}
        REGION: ${{ vars.REGION }}
        REPOSITORY: ${{ vars.REPOSITORY }}
        SESSION_TYPE: ${{ vars.SESSION_TYPE }}
     run: 
      gcloud run deploy "$APP_NAME"  --image "$REPOSITORY/$APP_NAME:latest"  --max-instances=$INSTANCES --port $PORT --set-env-vars="FLASK_APP=$FLASK_APP,FLASK_ENV=$FLASK_ENV,MONGO_URL=$MONGO_URL,MONGODB_DB=$MONGODB_DB,REDIS_QUEUE_NAME=$REDIS_QUEUE_NAME,REDIS_URL=$REDIS_URL,SESSION_TYPE=$SESSION_TYPE"
      --region=$REGION --allow-unauthenticated   --service-account $SERVICE_ACCOUNT --add-volume=name=cill-uploads,type=cloud-storage,bucket=$BUCKET_NAME --add-volume-mount=volume=html-volume,mount-path=$BUCKET_MOUNT_PATH